buildscript {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/public' }
    }
}

plugins {
    id 'groovy'
    id 'maven-publish'
}

group = "com.github.forrest-x"
version = "1.0.0"

def symtabToolVersion = '3.3.4'
def buglySymbolAndroidJar = "libs/buglyqq-upload-symbol-${symtabToolVersion}.jar"

dependencies {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/public' }
    }
    compileOnly gradleApi()
    compileOnly localGroovy()
    compileOnly fileTree(dir: 'libs', include: ['*.jar'])
    compileOnly 'org.apache.httpcomponents:httpclient:4.3.6'
    compileOnly 'org.apache.httpcomponents:httpmime:4.3.6'
    compileOnly 'com.android.tools.build:gradle:1.2.3'
}
/*
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId = 'com.github'
                artifactId = 'symtabfileuploader'
                version = '1.0'
            }
            // Creates a Maven publication called “debug”.
            debug(MavenPublication) {
                // Applies the component for the debug build variant.
                from components.debug

                groupId = 'com.github'
                artifactId = 'symtabfileuploader'
                version = '1.0'
            }
        }
    }
}

 */
/*
def siteUrl = "https://github.com/JalenChen/SymtabFileUploader"
def gitUrl = "https://github.com/JalenChen/SymtabFileUploader.git"

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom.project {
            // packaging 'jar'
            // Add your description here
            name = 'Uploading mapping file and symtab file which is extracted from debug so file'
            url siteUrl
            // Set your license
            licenses {
                license {
                    name = 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }
            developers {
                developer {
                    id 'jalenchen'
                    name = 'wenkechen'
                    email 'jalenchen@qq.com'
                }
            }
            scm {
                connection gitUrl
                developerConnection gitUrl
                url siteUrl
            }
        }
    }
}
 */

    /*
publishing {
    publications {
        mavenJava(MavenPublication) {
            pom {
                name = 'My Library'
                description = 'A concise description of my library'
                url = 'http://www.example.com/library'
                properties = [
                        myProp: "value",
                        "prop.with.dots": "anotherValue"
                ]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'johnd'
                        name = 'John Doe'
                        email = 'john.doe@example.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://example.com/my-library.git'
                    developerConnection = 'scm:git:ssh://example.com/my-library.git'
                    url = 'http://example.com/my-library/'
                }
            }
        }
    }
}
     */

task unzipSymbolToolJarToClasses(type: Copy) {
    from zipTree(buglySymbolAndroidJar)
    exclude 'META-INF'
    into 'build/classes/main/'
}

jar.dependsOn unzipSymbolToolJarToClasses

task sourcesJar(type: Jar) {
    // from zipTree(buglyPluginJar)
    from 'src/main/groovy'
    exclude 'META-INF'
    classifier = 'sources'
}

groovydoc {
    includePrivate = true
    source = 'src/main/groovy'
}

task groovydocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'javadoc'
    from groovydoc.destinationDir
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

/*

artifacts {
    archives groovydocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']

    pkg {
        repo = "maven"
        name = "SymtabFileUploader"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}
 */